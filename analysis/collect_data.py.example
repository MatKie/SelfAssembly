from clustercode import ClusterEnsemble
from mkutils import save_to_file, create_fig
import sys, os 
import numpy as np
import pickle 
cluster_objects='C1 C2 C3 C4'
eq = False

# +
if eq:
    traj = os.path.join('..','npt', 'traj_cut.trr')
    tpr = os.path.join('..', 'npt', 'topol.tpr')
else:
    traj = os.path.join('..','npt', 'traj.trr')
    tpr = os.path.join('..', 'npt', 'topol.tpr')
ensemble = ClusterEnsemble(tpr, traj, cluster_objects)
ensemble.cluster_analysis(cut_off=6.5)

rgyr_list = []

for clusterlist in ensemble.cluster_list:
    time = ensemble.universe.trajectory.time
    for cluster in clusterlist:
        if cluster.n_residues > 1:
            ensemble.unwrap_cluster(cluster)
            rgyr = ensemble.gyration(cluster, mass=False, pca=True)
            rgyr_list.append([time, cluster.n_residues, np.sqrt(np.sum(rgyr)) ,*rgyr, rgyr[2]*rgyr[2]-0.5*(rgyr[1]*rgyr[1]+rgyr[0]*rgyr[0])])



# -



with open('save.pkl', 'wb') as f:
    pickle.dump(ensemble.cluster_sizes, f)
    pickle.dump(np.asarray(rgyr_list), f)




